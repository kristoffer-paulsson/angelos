"""

Copyright (c) 2018-2019, Kristoffer Paulsson <kristoffer.paulsson@talenten.se>

This file is distributed under the terms of the MIT license.


"""
import math
import colorsys


def step(r, g, b, repetitions=1):
    lum = math.sqrt(.241 * r + .691 * g + .068 * b)

    h, s, v = colorsys.rgb_to_hsv(r, g, b)

    h2 = int(h * repetitions)
    v2 = int(v * repetitions)

    if h2 % 2 == 1:
        v2 = repetitions - v2
        lum = repetitions - lum

    return (h2, lum, v2)


def lum(r, g, b):
    return math.sqrt(.241 * r + .691 * g + .068 * b)


RGB676 = [
    (0, 0, 0),       (0, 0, 42),      (0, 0, 85),      (0, 0, 128),
    (0, 0, 170),     (0, 0, 212),     (0, 0, 255),     (0, 51, 0),
    (0, 51, 42),     (0, 51, 85),     (0, 51, 128),    (0, 51, 170),
    (0, 51, 212),    (0, 51, 255),    (0, 102, 0),     (0, 102, 42),
    (0, 102, 85),    (0, 102, 128),   (0, 102, 170),   (0, 102, 212),
    (0, 102, 255),   (0, 153, 0),     (0, 153, 42),    (0, 153, 85),
    (0, 153, 128),   (0, 153, 170),   (0, 153, 212),   (0, 153, 255),
    (0, 204, 0),     (0, 204, 42),    (0, 204, 85),    (0, 204, 128),
    (0, 204, 170),   (0, 204, 212),   (0, 204, 255),   (0, 255, 0),
    (0, 255, 42),    (0, 255, 85),    (0, 255, 128),   (0, 255, 170),
    (0, 255, 212),   (0, 255, 255),   (51, 0, 0),      (51, 0, 42),
    (51, 0, 85),     (51, 0, 128),    (51, 0, 170),    (51, 0, 212),
    (51, 0, 255),    (51, 51, 0),     (51, 51, 42),    (51, 51, 85),
    (51, 51, 128),   (51, 51, 170),   (51, 51, 212),   (51, 51, 255),
    (51, 102, 0),    (51, 102, 42),   (51, 102, 85),   (51, 102, 128),
    (51, 102, 170),  (51, 102, 212),  (51, 102, 255),  (51, 153, 0),
    (51, 153, 42),   (51, 153, 85),   (51, 153, 128),  (51, 153, 170),
    (51, 153, 212),  (51, 153, 255),  (51, 204, 0),    (51, 204, 42),
    (51, 204, 85),   (51, 204, 128),  (51, 204, 170),  (51, 204, 212),
    (51, 204, 255),  (51, 255, 0),    (51, 255, 42),   (51, 255, 85),
    (51, 255, 128),  (51, 255, 170),  (51, 255, 212),  (51, 255, 255),
    (102, 0, 0),     (102, 0, 42),    (102, 0, 85),    (102, 0, 128),
    (102, 0, 170),   (102, 0, 212),   (102, 0, 255),   (102, 51, 0),
    (102, 51, 42),   (102, 51, 85),   (102, 51, 128),  (102, 51, 170),
    (102, 51, 212),  (102, 51, 255),  (102, 102, 0),   (102, 102, 42),
    (102, 102, 85),  (102, 102, 128), (102, 102, 170), (102, 102, 212),
    (102, 102, 255), (102, 153, 0),   (102, 153, 42),  (102, 153, 85),
    (102, 153, 128), (102, 153, 170), (102, 153, 212), (102, 153, 255),
    (102, 204, 0),   (102, 204, 42),  (102, 204, 85),  (102, 204, 128),
    (102, 204, 170), (102, 204, 212), (102, 204, 255), (102, 255, 0),
    (102, 255, 42),  (102, 255, 85),  (102, 255, 128), (102, 255, 170),
    (102, 255, 212), (102, 255, 255), (153, 0, 0),     (153, 0, 42),
    (153, 0, 85),    (153, 0, 128),   (153, 0, 170),   (153, 0, 212),
    (153, 0, 255),   (153, 51, 0),    (153, 51, 42),   (153, 51, 85),
    (153, 51, 128),  (153, 51, 170),  (153, 51, 212),  (153, 51, 255),
    (153, 102, 0),   (153, 102, 42),  (153, 102, 85),  (153, 102, 128),
    (153, 102, 170), (153, 102, 212), (153, 102, 255), (153, 153, 0),
    (153, 153, 42),  (153, 153, 85),  (153, 153, 128), (153, 153, 170),
    (153, 153, 212), (153, 153, 255), (153, 204, 0),   (153, 204, 42),
    (153, 204, 85),  (153, 204, 128), (153, 204, 170), (153, 204, 212),
    (153, 204, 255), (153, 255, 0),   (153, 255, 42),  (153, 255, 85),
    (153, 255, 128), (153, 255, 170), (153, 255, 212), (153, 255, 255),
    (204, 0, 0),     (204, 0, 42),    (204, 0, 85),    (204, 0, 128),
    (204, 0, 170),   (204, 0, 212),   (204, 0, 255),   (204, 51, 0),
    (204, 51, 42),   (204, 51, 85),   (204, 51, 128),  (204, 51, 170),
    (204, 51, 212),  (204, 51, 255),  (204, 102, 0),   (204, 102, 42),
    (204, 102, 85),  (204, 102, 128), (204, 102, 170), (204, 102, 212),
    (204, 102, 255), (204, 153, 0),   (204, 153, 42),  (204, 153, 85),
    (204, 153, 128), (204, 153, 170), (204, 153, 212), (204, 153, 255),
    (204, 204, 0),   (204, 204, 42),  (204, 204, 85),  (204, 204, 128),
    (204, 204, 170), (204, 204, 212), (204, 204, 255), (204, 255, 0),
    (204, 255, 42),  (204, 255, 85),  (204, 255, 128), (204, 255, 170),
    (204, 255, 212), (204, 255, 255), (255, 0, 0),     (255, 0, 42),
    (255, 0, 85),    (255, 0, 128),   (255, 0, 170),   (255, 0, 212),
    (255, 0, 255),   (255, 51, 0),    (255, 51, 42),   (255, 51, 85),
    (255, 51, 128),  (255, 51, 170),  (255, 51, 212),  (255, 51, 255),
    (255, 102, 0),   (255, 102, 42),  (255, 102, 85),  (255, 102, 128),
    (255, 102, 170), (255, 102, 212), (255, 102, 255), (255, 153, 0),
    (255, 153, 42),  (255, 153, 85),  (255, 153, 128), (255, 153, 170),
    (255, 153, 212), (255, 153, 255), (255, 204, 0),   (255, 204, 42),
    (255, 204, 85),  (255, 204, 128), (255, 204, 170), (255, 204, 212),
    (255, 204, 255), (255, 255, 0),   (255, 255, 42),  (255, 255, 85),
    (255, 255, 128), (255, 255, 170), (255, 255, 212), (255, 255, 255),
    (0, 0, 0),       (0, 0, 0),       (0, 0, 0),       (0, 0, 0)
]


RGB676.sort(key=lambda c: step(c[0], c[1], c[2]))

print(RGB676)
